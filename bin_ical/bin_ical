#/bin/env perl

use strict;
use warnings;
use Date::ICal;
use Data::ICal;
use Date::Parse;
use Getopt::Long;
use WWW::Mechanize;
use Web::Scraper;
use Config::Simple;
use Data::ICal::Entry::Event;

my $config_file;

my $res = GetOptions(
"config=s" => \$config_file
);

$config_file = $ENV{HOME} . '/.bin_icalrc' unless $config_file;

my $conf;

if ( -e $config_file ) {
    $conf = Config::Simple->new( $config_file );
} else {
    die "Failed to find config file [ $config_file ]";
}

my $m = WWW::Mechanize->new;
my $url = $conf->param('url') || 'http://www.fifedirect.org.uk/env_bins/index.cfm';

$m->get( $url );
$m->submit_form(
    with_fields => {
        postcode => $conf->param( 'postcode' )
    }
);

$m->follow_link( text_regex => qr/@{[ $conf->param( 'address' ) ]}/ );

my $content = $m->content;

my $cal_scraper = scraper {
    process 'table.results > tr', "dates[]" => scraper {
        process 'td.resultData', 'info[]' => 'TEXT';
    }
};

my $collections = $cal_scraper->scrape( $content );

my $calendar = Data::ICal->new();

for my $dates ( @{ $collections->{dates} } ) {
    next unless $dates->{info}->[1];
    my $todo = Data::ICal::Entry::Event->new;
    my $epoch = str2time( $dates->{info}->[0] ) - ( 60 * 60 * 5 );
    $todo->add_properties(
        summary => sprintf( 'Take out %s', $dates->{info}->[1] ),
        dtstart => Date::ICal->new( epoch => $epoch )->ical,
    );
    $calendar->add_entry( $todo );
}

print $calendar->as_string;
